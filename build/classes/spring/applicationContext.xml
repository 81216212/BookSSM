<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
  	 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
 	 http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<!--开启注解的扫描，希望处理service和dao，controller不需要Spring框架去处理 -->
	<context:component-scan base-package="com.cmj">
		<!--配置哪些注解不扫描 -->
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 加载配数据源配置文件 db.properties -->
	<context:property-placeholder
		location="classpath:db.properties" />

	<!-- 配置 C3P0 数据源 -->
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass"
			value="${datasource.connection.driver_class}" />
		<property name="jdbcUrl" value="${datasource.connection.url}" />
		<property name="user"
			value="${datasource.connection.username}" />
		<property name="password"
			value="${datasource.connection.password}" />
	</bean>

	<!-- 事务管理器 （JDBC） -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 启动声明式事务驱动 -->
	<tx:annotation-driven
		transaction-manager="transactionManager" />


	<!-- spring 通过 sqlSessionFactoryBean 获取 sqlSessionFactory 工厂类 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 扫描 po 包，使用别名 -->
		<property name="typeAliasesPackage" value="com.cmj.domain"></property>
		<!-- 扫描映射文件 -->
		<property name="mapperLocations"
			value="classpath:mapper/*.xml"></property>
		<!-- 引入插件 -->
		<property name="plugins">
			<array>
				<!-- mybatis分页插件 -->
				<bean class="com.github.pagehelper.PageInterceptor">
					<property name="properties">
						<value>
							helperDialect=mysql
							reasonable=true
							supportMethodsArguments=true
							params=count=countSql
							autoRuntimeDialect=true
						</value>
					</property>
				</bean>
			</array>
		</property>
	</bean>

	<!-- 开启Spring的IOC注解扫描 -->
	<context:component-scan base-package="com.cmj" />

	<!-- 配置扫描 dao 包，动态实现 dao 接口，注入到 spring 容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.cmj.dao" />
		<!-- 注意使用 sqlSessionFactoryBeanName 避免出现spring 扫描组件失效问题 -->
		<property name="sqlSessionFactoryBeanName"
			value="sqlSessionFactory" />
	</bean>

</beans>